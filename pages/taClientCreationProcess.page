<apex:page standardStylesheets="false" showHeader="false" sidebar="false" docType="html-5.0">
    <div class="vlocity via-slds" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" ng-app="NewClientProcess">
        <vlocity_cmt:BusinessProcessComponent strOmniScriptType="CustomerMaster"
            strOmniScriptSubType="New Client Process"
            strOmniScriptLang="English"
            previewMode="{!$CurrentPage.parameters.previewEmbedded}"
            verticalMode="{!$CurrentPage.parameters.verticalMode}"
            strOmniScriptId="{!$CurrentPage.parameters.designerPreviewId}"
            scriptLayout="lightning"/>
        <script type="text/javascript">
            var modules = ['vlocity-business-process'];
            var myModule = angular.module('NewClientProcess', modules);
            
            /* CUSTOM FILTERS */
            myModule
                .filter('emailTypeahead', emailTypeahead);
                
            emailTypeahead.$inject = ['$filter'];
            function emailTypeahead($filter) {
                return function(input, email) {
                    var auxInput = input;
                    var emailDomainEntered = '';
                    if (email) {
                        emailDomainEntered = email.split('@')[1];
                    }
                return $filter('filter')(auxInput, emailDomainEntered);
                };
            }
            
            myModule
                .filter('secondsToDateTime', secondsToDateTime);
            
            function secondsToDateTime() {
                return function(seconds) {
                    return new Date(1970, 0, 1).setSeconds(seconds);
                };
            }
            
            
            /* CONTROLLERS */
            myModule
                .controller('QAController', QAController);
            
            QAController.$inject = ['$scope', '$timeout'];
            function QAController($scope, $timeout) {
                var qac = this;
                qac.counter = 0;
                qac.init = init;
                qac.onTimeout = onTimeout;
                
                function init(counter) {
                    qac.counter = convertMinutesToSeconds(counter);
                }
                
                function convertMinutesToSeconds(value) {
                    return (value * 1) * 60;
                }
                
                function onTimeout(){
                    qac.counter--;
                    mytimeout = $timeout(qac.onTimeout,1000);
                    if (!qac.counter) {
                      stop();
                    }
                }
            
                function stop (){
                    $timeout.cancel(mytimeout);
                }
            }
            
            
            myModule.controller('NewAccountController', NewAccountController);

                NewAccountController.$inject = ['$scope'];
                function NewAccountController($scope)
                {
                    var nac = this;
                    nac.CopyLegalAddress = CopyLegalAddress;

                    function CopyLegalAddress(AccountData)
                    {
                        var chkCopy = AccountData.CopyLegalAddress;
                        if(chkCopy)
                        {
                            AccountData.BillingAddress.BillingStreet = "cambio";
                        }
                        else
                        {
                            AccountData.BillingAddress.BillingStreet = "falso";
                        }
                    }
                }                
            
             myModule
                .controller('EmailCtrl', EmailCtrl);
                    EmailCtrl.$inject = ['$scope'];
                    function EmailCtrl($scope) {
                        var ec = this;
                        ec.inputValue = '';
                        ec.emailSplited = '';
                        ec.getSplitedEmailInput = getSplitedEmailInput;
                        ec.validateEmail = validateEmail;
                        ec.selectedEmail = selectedEmail;
                        ec.emailPattern = new RegExp(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
                        ec.validateFieldByRegEx = false;
                        ec.checkboxChecked = checkboxChecked;
                        
                        $scope.$watch('bpTree.response.Contact.Email', function (newVal, oldVal) {
                            if (newVal != oldVal) {
                                getSplitedEmailInput(newVal, $scope.bpTree.response.Contact);
                            }
                        });

                        function getSplitedEmailInput(value, contact) {
                            
                            ec.inputValue = value;
                            contact.isEmailValidated = validateEmail(ec.inputValue);
                            ec.validateFieldByRegEx = contact.isEmailValidated;
                            if (ec.inputValue) {
                                ec.emailSplited = ec.inputValue.split('@')[0];
                            }
                        }

                        function validateEmail(email){
                            return ec.emailPattern.test(email);
                        }

                        function selectedEmail(contact, selectedEmail) {
                            contact.Email = ec.emailSplited+selectedEmail;
                            contact.isEmailValidated = ec.validateEmail(contact.Email);
                        }

                        function checkboxChecked(contact) {
                            contact.Email = '';
                            if (contact.EmailCheck) {
                                contact.isEmailValidated = true;
                            } else {
                                contact.isEmailValidated = false;
                            }
                        }
                    }
        </script>

    </div>
    <vlocity_cmt:VFActionFunction /> 
</apex:page>